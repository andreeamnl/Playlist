{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/Playlistify/Playlistify/spotify-top-songs/src/components/Navbar/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  toggleAbout\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedDarkMode = localStorage.getItem('darkMode');\n    return savedDarkMode ? JSON.parse(savedDarkMode) : false;\n  });\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    document.body.classList.toggle('dark', darkMode);\n    document.body.classList.toggle('light', !darkMode);\n  }, [darkMode]);\n  const handleToggleDarkMode = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `bg-${darkMode ? 'darkGray' : 'lightGray'} p-4`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"text-teal text-3xl font-bold flex items-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: \"Playlistify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded mr-4\" // Moved to the right with margin\n          ,\n          onClick: toggleAbout,\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded\",\n          onClick: handleToggleDarkMode,\n          children: darkMode ? 'Light Mode' : 'Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"fbvkhDQeTk3wkDB8l3AlUuJfkJo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Navbar","toggleAbout","_s","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","setItem","stringify","document","body","classList","toggle","handleToggleDarkMode","prevDarkMode","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Applications/GitHub/Playlistify/Playlistify/spotify-top-songs/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\n\nconst Navbar = ({ toggleAbout }) => {\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedDarkMode = localStorage.getItem('darkMode');\n    return savedDarkMode ? JSON.parse(savedDarkMode) : false;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    document.body.classList.toggle('dark', darkMode);\n    document.body.classList.toggle('light', !darkMode);\n  }, [darkMode]);\n\n  const handleToggleDarkMode = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n  };\n\n  return (\n    <nav className={`bg-${darkMode ? 'darkGray' : 'lightGray'} p-4`}>\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <Link to=\"/\" className=\"text-teal text-3xl font-bold flex items-center\"> {/* Use Link component for navigation */}\n          <span className=\"mr-2\">Playlistify</span>\n        </Link>\n        <div className=\"flex items-center\">\n          <button \n            className=\"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded mr-4\" // Moved to the right with margin\n            onClick={toggleAbout}\n          >\n            About\n          </button>\n          <button \n            className=\"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded\"\n            onClick={handleToggleDarkMode}\n          >\n            {darkMode ? 'Light Mode' : 'Dark Mode'}\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C,MAAMU,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,OAAOF,aAAa,GAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,GAAG,KAAK;EAC1D,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACR,QAAQ,CAAC,CAAC;IAC1DS,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEZ,QAAQ,CAAC;IAChDS,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,CAACZ,QAAQ,CAAC;EACpD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;IACjCZ,WAAW,CAACa,YAAY,IAAI,CAACA,YAAY,CAAC;EAC5C,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAG,MAAKf,QAAQ,GAAG,UAAU,GAAG,WAAY,MAAM;IAAAgB,QAAA,eAC9DpB,OAAA;MAAKmB,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAClEpB,OAAA,CAACF,IAAI;QAACuB,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,gDAAgD;QAAAC,QAAA,GAAC,GAAC,eACvEpB,OAAA;UAAMmB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACPzB,OAAA;QAAKmB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCpB,OAAA;UACEmB,SAAS,EAAC,wEAAwE,CAAC;UAAA;UACnFO,OAAO,EAAExB,WAAY;UAAAkB,QAAA,EACtB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzB,OAAA;UACEmB,SAAS,EAAC,mEAAmE;UAC7EO,OAAO,EAAET,oBAAqB;UAAAG,QAAA,EAE7BhB,QAAQ,GAAG,YAAY,GAAG;QAAW;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAtB,EAAA,CAvCKF,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}