{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Playlist/Playlist.js\",\n  _s = $RefreshSig$();\n// Playlist.js\n\nimport React, { useState, useEffect } from 'react';\nimport Song from '../Song/Song';\nimport Shuffle from '../Shuffle/Shuffle';\nimport songsData from '../../data/songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const handleShuffle = shuffledPlaylist => {\n    // Set the shuffled playlist in the component state\n    setPlaylist(shuffledPlaylist);\n  };\n  const [playlist, setPlaylist] = useState([]);\n  useEffect(() => {\n    // Check if songs data exists in local storage\n    const storedSongs = localStorage.getItem('playlist');\n    if (storedSongs) {\n      setPlaylist(JSON.parse(storedSongs));\n    } else {\n      // If not, use default songs data and save it to local storage\n      setPlaylist(songsData);\n      localStorage.setItem('playlist', JSON.stringify(songsData));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist bg-lightGray text-black p-4 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-teal px-2 py-1 rounded-lg text-white\",\n        children: \"My Daily Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Shuffle, {\n      onShuffle: handleShuffle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlist.map((song, index) => /*#__PURE__*/_jsxDEV(Song, {\n        title: song.title,\n        artist: song.artist,\n        duration: song.duration,\n        className: \"mb-4\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"SfGHzpmtpLKztV2lxKmaYynPFKI=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","Song","Shuffle","songsData","jsxDEV","_jsxDEV","Playlist","_s","handleShuffle","shuffledPlaylist","setPlaylist","playlist","storedSongs","localStorage","getItem","JSON","parse","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onShuffle","map","song","index","title","artist","duration","_c","$RefreshReg$"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Playlist/Playlist.js"],"sourcesContent":["// Playlist.js\n\nimport React, { useState, useEffect } from 'react';\nimport Song from '../Song/Song'; \nimport Shuffle from '../Shuffle/Shuffle'; \n\nimport songsData from '../../data/songs'; \n\nconst Playlist = () => {\n    const handleShuffle = (shuffledPlaylist) => {\n        // Set the shuffled playlist in the component state\n        setPlaylist(shuffledPlaylist);\n    };\n    \n  const [playlist, setPlaylist] = useState([]);\n\n  useEffect(() => {\n    // Check if songs data exists in local storage\n    const storedSongs = localStorage.getItem('playlist');\n    if (storedSongs) {\n      setPlaylist(JSON.parse(storedSongs));\n    } else {\n      // If not, use default songs data and save it to local storage\n      setPlaylist(songsData);\n      localStorage.setItem('playlist', JSON.stringify(songsData));\n    }\n  }, []);\n\n  return (\n    <div className=\"playlist bg-lightGray text-black p-4 rounded-lg shadow-lg\">\n      <h2 className=\"text-3xl font-bold mb-4\">\n        <span className=\"bg-teal px-2 py-1 rounded-lg text-white\">\n          My Daily Playlist\n        </span>{' '}\n      </h2>\n      <Shuffle onShuffle={handleShuffle} /> {/* Pass handleShuffle function as prop */}\n      <ul>\n        {playlist.map((song, index) => (\n          <Song\n            key={index}\n            title={song.title}\n            artist={song.artist}\n            duration={song.duration}\n            className=\"mb-4\"\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Playlist;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AAExC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAIC,gBAAgB,IAAK;IACxC;IACAC,WAAW,CAACD,gBAAgB,CAAC;EACjC,CAAC;EAEH,MAAM,CAACE,QAAQ,EAAED,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,IAAIF,WAAW,EAAE;MACfF,WAAW,CAACK,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACtC,CAAC,MAAM;MACL;MACAF,WAAW,CAACP,SAAS,CAAC;MACtBU,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACf,SAAS,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA;IAAKc,SAAS,EAAC,2DAA2D;IAAAC,QAAA,gBACxEf,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACrCf,OAAA;QAAMc,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACLnB,OAAA,CAACH,OAAO;MAACuB,SAAS,EAAEjB;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACtCnB,OAAA;MAAAe,QAAA,EACGT,QAAQ,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBvB,OAAA,CAACJ,IAAI;QAEH4B,KAAK,EAAEF,IAAI,CAACE,KAAM;QAClBC,MAAM,EAAEH,IAAI,CAACG,MAAO;QACpBC,QAAQ,EAAEJ,IAAI,CAACI,QAAS;QACxBZ,SAAS,EAAC;MAAM,GAJXS,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}