{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Like/Like.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LikedIcon from '../Like/LikedIcon.jsx';\nimport UnlikedIcon from '../Like/UnlikedIcon.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Like = ({\n  songId\n}) => {\n  _s();\n  const [liked, setLiked] = useState(false);\n  useEffect(() => {\n    const playlist = JSON.parse(localStorage.getItem('playlist')) || [];\n    const song = playlist.find(song => song.id === songId);\n    if (song && song.liked) {\n      setLiked(true);\n    }\n  }, [songId]);\n  const toggleLiked = () => {\n    // Toggle liked state in the component\n    setLiked(prevLiked => !prevLiked);\n\n    // Update liked status in local storage\n    const updatedPlaylist = JSON.parse(localStorage.getItem('playlist')) || [];\n    const updatedSongIndex = updatedPlaylist.findIndex(song => song.id === songId);\n    if (updatedSongIndex !== -1) {\n      updatedPlaylist[updatedSongIndex].liked = !liked; // Toggle the liked status\n      localStorage.setItem('playlist', JSON.stringify(updatedPlaylist));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: toggleLiked,\n    children: liked ? /*#__PURE__*/_jsxDEV(LikedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(UnlikedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Like, \"XVwEQrglgvKg4vWDDJzGSUieNRY=\");\n_c = Like;\nexport default Like;\nvar _c;\n$RefreshReg$(_c, \"Like\");","map":{"version":3,"names":["React","useState","useEffect","LikedIcon","UnlikedIcon","jsxDEV","_jsxDEV","Like","songId","_s","liked","setLiked","playlist","JSON","parse","localStorage","getItem","song","find","id","toggleLiked","prevLiked","updatedPlaylist","updatedSongIndex","findIndex","setItem","stringify","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Like/Like.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LikedIcon from '../Like/LikedIcon.jsx';\nimport UnlikedIcon from '../Like/UnlikedIcon.jsx';\n\nconst Like = ({ songId }) => {\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    const playlist = JSON.parse(localStorage.getItem('playlist')) || [];\n    const song = playlist.find(song => song.id === songId);\n    if (song && song.liked) {\n      setLiked(true);\n    }\n  }, [songId]);\n\n  const toggleLiked = () => {\n    // Toggle liked state in the component\n    setLiked(prevLiked => !prevLiked);\n\n    // Update liked status in local storage\n    const updatedPlaylist = JSON.parse(localStorage.getItem('playlist')) || [];\n    const updatedSongIndex = updatedPlaylist.findIndex(song => song.id === songId);\n    if (updatedSongIndex !== -1) {\n      updatedPlaylist[updatedSongIndex].liked = !liked; // Toggle the liked status\n      localStorage.setItem('playlist', JSON.stringify(updatedPlaylist));\n    }\n  };\n\n  return (\n    <div onClick={toggleLiked}>\n      {liked ? <LikedIcon /> : <UnlikedIcon />}\n    </div>\n  );\n};\n\nexport default Like;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACnE,MAAMC,IAAI,GAAGL,QAAQ,CAACM,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKX,MAAM,CAAC;IACtD,IAAIS,IAAI,IAAIA,IAAI,CAACP,KAAK,EAAE;MACtBC,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAT,QAAQ,CAACU,SAAS,IAAI,CAACA,SAAS,CAAC;;IAEjC;IACA,MAAMC,eAAe,GAAGT,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IAC1E,MAAMO,gBAAgB,GAAGD,eAAe,CAACE,SAAS,CAACP,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKX,MAAM,CAAC;IAC9E,IAAIe,gBAAgB,KAAK,CAAC,CAAC,EAAE;MAC3BD,eAAe,CAACC,gBAAgB,CAAC,CAACb,KAAK,GAAG,CAACA,KAAK,CAAC,CAAC;MAClDK,YAAY,CAACU,OAAO,CAAC,UAAU,EAAEZ,IAAI,CAACa,SAAS,CAACJ,eAAe,CAAC,CAAC;IACnE;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKqB,OAAO,EAAEP,WAAY;IAAAQ,QAAA,EACvBlB,KAAK,gBAAGJ,OAAA,CAACH,SAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG1B,OAAA,CAACF,WAAW;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7BIF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}