{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Playlist/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Song from '../Song/Song'; // Import the Song component from its new location\nimport songsData from '../../data/songs'; // Import songs.json from its new location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const isDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDarkMode);\n  }, []);\n  const containerClasses = darkMode ? 'playlist bg-darkGray text-white p-4 rounded-lg shadow-lg' : 'playlist bg-lightGray text-black p-4 rounded-lg shadow-lg';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerClasses,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-3xl font-bold mb-4 ${darkMode ? 'text-white' : 'text-black'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bg-teal px-2 py-1 rounded-lg ${darkMode ? 'text-white' : 'text-black'}`,\n        children: \"My Daily Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songsData.map((song, index) => /*#__PURE__*/_jsxDEV(Song, {\n        title: song.title,\n        artist: song.artist,\n        duration: song.duration,\n        className: \"mb-4\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","Song","songsData","jsxDEV","_jsxDEV","Playlist","_s","darkMode","setDarkMode","isDarkMode","localStorage","getItem","containerClasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","title","artist","duration","_c","$RefreshReg$"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Playlist/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Song from '../Song/Song'; // Import the Song component from its new location\nimport songsData from '../../data/songs'; // Import songs.json from its new location\n\nconst Playlist = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const isDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDarkMode);\n  }, []);\n\n  const containerClasses = darkMode\n    ? 'playlist bg-darkGray text-white p-4 rounded-lg shadow-lg'\n    : 'playlist bg-lightGray text-black p-4 rounded-lg shadow-lg';\n\n  return (\n    <div className={containerClasses}>\n      <h2 className={`text-3xl font-bold mb-4 ${darkMode ? 'text-white' : 'text-black'}`}>\n        <span className={`bg-teal px-2 py-1 rounded-lg ${darkMode ? 'text-white' : 'text-black'}`}>\n          My Daily Playlist\n        </span>{' '}\n      </h2>\n      <ul>\n        {songsData.map((song, index) => (\n          <Song\n            key={index}\n            title={song.title}\n            artist={song.artist}\n            duration={song.duration}\n            className=\"mb-4\"\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Playlist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc,CAAC,CAAC;AACjC,OAAOC,SAAS,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IAC9DH,WAAW,CAACC,UAAU,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAGL,QAAQ,GAC7B,0DAA0D,GAC1D,2DAA2D;EAE/D,oBACEH,OAAA;IAAKS,SAAS,EAAED,gBAAiB;IAAAE,QAAA,gBAC/BV,OAAA;MAAIS,SAAS,EAAG,2BAA0BN,QAAQ,GAAG,YAAY,GAAG,YAAa,EAAE;MAAAO,QAAA,gBACjFV,OAAA;QAAMS,SAAS,EAAG,gCAA+BN,QAAQ,GAAG,YAAY,GAAG,YAAa,EAAE;QAAAO,QAAA,EAAC;MAE3F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACLd,OAAA;MAAAU,QAAA,EACGZ,SAAS,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBjB,OAAA,CAACH,IAAI;QAEHqB,KAAK,EAAEF,IAAI,CAACE,KAAM;QAClBC,MAAM,EAAEH,IAAI,CAACG,MAAO;QACpBC,QAAQ,EAAEJ,IAAI,CAACI,QAAS;QACxBX,SAAS,EAAC;MAAM,GAJXQ,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhCID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}