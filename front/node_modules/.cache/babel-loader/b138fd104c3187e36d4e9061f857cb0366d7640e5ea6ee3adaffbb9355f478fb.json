{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Playlist/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Song from '../Song/Song';\nimport Shuffle from '../Shuffle/Shuffle';\nimport songsData from '../../data/songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const handleShuffle = shuffledPlaylist => {\n    // Set the shuffled playlist in the component state\n    setPlaylist(shuffledPlaylist);\n  };\n  const handleLike = playlist => {\n    // Set the shuffled playlist in the component state\n    setPlaylist(playlist);\n  };\n  useEffect(() => {\n    // Check if songs data exists in local storage\n    const storedSongs = localStorage.getItem('playlist');\n    if (storedSongs) {\n      setPlaylist(JSON.parse(storedSongs));\n    } else {\n      // If not, use default songs data and save it to local storage\n      setPlaylist(songsData);\n      localStorage.setItem('playlist', JSON.stringify(songsData));\n    }\n  }, [playlist, setPlaylist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist bg-lightTeal text-black p-4 rounded-lg shadow-lg w-3/4 mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-teal mb-4\",\n      children: \"My Daily Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Shuffle, {\n      onShuffle: handleShuffle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlist.map((song, index) => /*#__PURE__*/_jsxDEV(Song, {\n        title: song.title,\n        artist: song.artist,\n        duration: song.duration,\n        className: \"mb-4\",\n        onHandleLike: handleLike\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Playlist, \"SfGHzpmtpLKztV2lxKmaYynPFKI=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","Song","Shuffle","songsData","jsxDEV","_jsxDEV","Playlist","_s","playlist","setPlaylist","handleShuffle","shuffledPlaylist","handleLike","storedSongs","localStorage","getItem","JSON","parse","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onShuffle","map","song","index","title","artist","duration","onHandleLike","id","_c","$RefreshReg$"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Playlist/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Song from '../Song/Song';\nimport Shuffle from '../Shuffle/Shuffle';\n\nimport songsData from '../../data/songs';\n\nconst Playlist = () => {\n    const [playlist, setPlaylist] = useState([]);\n\n\n    const handleShuffle = (shuffledPlaylist) => {\n        // Set the shuffled playlist in the component state\n        setPlaylist(shuffledPlaylist);\n    };\n    const handleLike = (playlist) => {\n        // Set the shuffled playlist in the component state\n        setPlaylist(playlist);\n    };\n\n\n    useEffect(() => {\n        // Check if songs data exists in local storage\n        const storedSongs = localStorage.getItem('playlist');\n        if (storedSongs) {\n            setPlaylist(JSON.parse(storedSongs));\n        } else {\n            // If not, use default songs data and save it to local storage\n            setPlaylist(songsData);\n            localStorage.setItem('playlist', JSON.stringify(songsData));\n        }\n    }, [playlist, setPlaylist]);\n\n    \n\n    return (\n        <div className=\"playlist bg-lightTeal text-black p-4 rounded-lg shadow-lg w-3/4 mx-auto\">\n            <h2 className=\"text-xl font-semibold text-teal mb-4\">\n                My Daily Playlist\n            </h2>\n            <Shuffle onShuffle={handleShuffle} /> {/* Pass handleShuffle function as prop */}\n            <ul>\n                {playlist.map((song, index) => (\n                    <Song\n                        key={song.id}\n                        title={song.title}\n                        artist={song.artist}\n                        duration={song.duration}\n                        className=\"mb-4\"\n                        onHandleLike={handleLike}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Playlist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AAExC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG5C,MAAMW,aAAa,GAAIC,gBAAgB,IAAK;IACxC;IACAF,WAAW,CAACE,gBAAgB,CAAC;EACjC,CAAC;EACD,MAAMC,UAAU,GAAIJ,QAAQ,IAAK;IAC7B;IACAC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAGDR,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,IAAIF,WAAW,EAAE;MACbJ,WAAW,CAACO,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACxC,CAAC,MAAM;MACH;MACAJ,WAAW,CAACN,SAAS,CAAC;MACtBW,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAAChB,SAAS,CAAC,CAAC;IAC/D;EACJ,CAAC,EAAE,CAACK,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAI3B,oBACIJ,OAAA;IAAKe,SAAS,EAAC,yEAAyE;IAAAC,QAAA,gBACpFhB,OAAA;MAAIe,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAC;IAErD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpB,OAAA,CAACH,OAAO;MAACwB,SAAS,EAAEhB;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACtCpB,OAAA;MAAAgB,QAAA,EACKb,QAAQ,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBxB,OAAA,CAACJ,IAAI;QAED6B,KAAK,EAAEF,IAAI,CAACE,KAAM;QAClBC,MAAM,EAAEH,IAAI,CAACG,MAAO;QACpBC,QAAQ,EAAEJ,IAAI,CAACI,QAAS;QACxBZ,SAAS,EAAC,MAAM;QAChBa,YAAY,EAAErB;MAAW,GALpBgB,IAAI,CAACM,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAhDID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}