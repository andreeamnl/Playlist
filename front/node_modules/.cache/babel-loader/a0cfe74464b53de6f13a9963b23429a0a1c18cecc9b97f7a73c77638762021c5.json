{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/Playlistify/Playlistify/spotify-top-songs/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Playlist from './components/Playlist/Playlist';\nimport Footer from './components/Footer/Footer';\nimport About from './pages/About/About';\nimport Login from './pages/Login/Login';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Assuming you have a function to check if the user is logged in based on the access token\n  const checkLoginStatus = () => {\n    const accessToken = localStorage.getItem('token');\n    if (accessToken) {\n      setIsLoggedIn(true);\n      console.log(\"is ogged in\");\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n\n  // Call the function to check login status on initial render\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/SpotifyAPITest\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\n\n// function App() {\n//   const [showAbout, setShowAbout] = useState(false);\n\n//   const toggleAbout = () => {\n//     setShowAbout(prevState => !prevState);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Navbar toggleAbout={toggleAbout} />\n//       {showAbout && <About />}\n//       <Playlist />\n//       <Login />\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Playlist","Footer","About","Login","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","checkLoginStatus","accessToken","localStorage","getItem","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Applications/GitHub/Playlistify/Playlistify/spotify-top-songs/src/App.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Playlist from './components/Playlist/Playlist';\nimport Footer from './components/Footer/Footer';\nimport About from './pages/About/About';\nimport Login from './pages/Login/Login'\nimport './App.css';\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Assuming you have a function to check if the user is logged in based on the access token\n  const checkLoginStatus = () => {\n    const accessToken = localStorage.getItem('token');\n    if (accessToken) {\n      setIsLoggedIn(true);\n      console.log(\"is ogged in\");\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n\n  // Call the function to check login status on initial render\n  useEffect(() => {\n    checkLoginStatus();\n  },[]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/SpotifyAPITest\" element={isLoggedIn ?<Playlist /> : <Login />} />\n          <Route path=\"/about\" element={<About />} />\n          {/* Redirect to login page if the user is not logged in */}\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n\n\n// function App() {\n//   const [showAbout, setShowAbout] = useState(false);\n\n//   const toggleAbout = () => {\n//     setShowAbout(prevState => !prevState);\n//   };\n \n//   return (\n//     <div className=\"App\">\n//       <Navbar toggleAbout={toggleAbout} />\n//       {showAbout && <About />}\n//       <Playlist />\n//       <Login />\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,WAAW;AAElB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfF,aAAa,CAAC,IAAI,CAAC;MACnBK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC,MAAM;MACLN,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdgB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEL,OAAA,CAACJ,MAAM;IAAAe,QAAA,eACLX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBX,OAAA,CAACV,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVhB,OAAA,CAACH,MAAM;QAAAc,QAAA,gBACLX,OAAA,CAACF,KAAK;UAACmB,IAAI,EAAC,iBAAiB;UAACC,OAAO,EAAEf,UAAU,gBAAEH,OAAA,CAACT,QAAQ;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACN,KAAK;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/EhB,OAAA,CAACF,KAAK;UAACmB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAElB,OAAA,CAACP,KAAK;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErC,CAAC,eACThB,OAAA,CAACR,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CAhCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAmCZ,eAAeA,GAAG;;AAGlB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}