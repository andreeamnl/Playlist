{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=()=>{const[darkMode,setDarkMode]=useState(()=>{// Get the initial dark mode state from local storage or default to false\nconst savedDarkMode=localStorage.getItem('darkMode');return savedDarkMode?JSON.parse(savedDarkMode):false;});// Update local storage when dark mode state changes\nuseEffect(()=>{localStorage.setItem('darkMode',JSON.stringify(darkMode));// Set body background based on dark mode state\ndocument.body.classList.toggle('dark',darkMode);},[darkMode]);const handleToggleDarkMode=()=>{setDarkMode(prevDarkMode=>!prevDarkMode);};return/*#__PURE__*/_jsx(\"nav\",{className:\"bg-\".concat(darkMode?'darkGray':'lightGray',\" p-4\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/\",className:\"text-teal text-xl font-bold\",children:\"Playlistify\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded\",onClick:handleToggleDarkMode,children:darkMode?'Light Mode':'Dark Mode'})})]})});};export default Navbar;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Navbar","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","setItem","stringify","document","body","classList","toggle","handleToggleDarkMode","prevDarkMode","className","concat","children","href","onClick"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Navbar = () => {\n  const [darkMode, setDarkMode] = useState(() => {\n    // Get the initial dark mode state from local storage or default to false\n    const savedDarkMode = localStorage.getItem('darkMode');\n    return savedDarkMode ? JSON.parse(savedDarkMode) : false;\n  });\n\n  // Update local storage when dark mode state changes\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    \n    // Set body background based on dark mode state\n    document.body.classList.toggle('dark', darkMode);\n  }, [darkMode]);\n\n  const handleToggleDarkMode = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n  };\n\n  return (\n    <nav className={`bg-${darkMode ? 'darkGray' : 'lightGray'} p-4`}>\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <a href=\"/\" className=\"text-teal text-xl font-bold\">Playlistify</a>\n        <div className=\"flex items-center\">\n          <button \n            className=\"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded\"\n            onClick={handleToggleDarkMode}\n          >\n            {darkMode ? 'Light Mode' : 'Dark Mode'}\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,IAAM,CAC7C;AACA,KAAM,CAAAS,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACtD,MAAO,CAAAF,aAAa,CAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAG,KAAK,CAC1D,CAAC,CAAC,CAEF;AACAR,SAAS,CAAC,IAAM,CACdS,YAAY,CAACI,OAAO,CAAC,UAAU,CAAEF,IAAI,CAACG,SAAS,CAACR,QAAQ,CAAC,CAAC,CAE1D;AACAS,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAEZ,QAAQ,CAAC,CAClD,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAa,oBAAoB,CAAGA,CAAA,GAAM,CACjCZ,WAAW,CAACa,YAAY,EAAI,CAACA,YAAY,CAAC,CAC5C,CAAC,CAED,mBACElB,IAAA,QAAKmB,SAAS,OAAAC,MAAA,CAAQhB,QAAQ,CAAG,UAAU,CAAG,WAAW,QAAO,CAAAiB,QAAA,cAC9DnB,KAAA,QAAKiB,SAAS,CAAC,qDAAqD,CAAAE,QAAA,eAClErB,IAAA,MAAGsB,IAAI,CAAC,GAAG,CAACH,SAAS,CAAC,6BAA6B,CAAAE,QAAA,CAAC,aAAW,CAAG,CAAC,cACnErB,IAAA,QAAKmB,SAAS,CAAC,mBAAmB,CAAAE,QAAA,cAChCrB,IAAA,WACEmB,SAAS,CAAC,mEAAmE,CAC7EI,OAAO,CAAEN,oBAAqB,CAAAI,QAAA,CAE7BjB,QAAQ,CAAG,YAAY,CAAG,WAAW,CAChC,CAAC,CACN,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}