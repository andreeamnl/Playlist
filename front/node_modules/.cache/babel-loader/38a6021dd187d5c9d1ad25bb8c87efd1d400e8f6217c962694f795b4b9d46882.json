{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Navbar/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  currentPlaylist,\n  onAddMusic\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    // Get the initial dark mode state from local storage or default to false\n    const savedDarkMode = localStorage.getItem('darkMode');\n    return savedDarkMode ? JSON.parse(savedDarkMode) : false;\n  });\n\n  // Update local storage when dark mode state changes\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n  const handleToggleDarkMode = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `bg-${darkMode ? 'darkGray' : 'lightGray'} p-4`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"text-teal text-xl font-bold\",\n        children: \"Spotify Top Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-${darkMode ? 'white' : 'black'} mr-4`,\n          children: [\"Current Playlist: \", currentPlaylist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded ${darkMode ? 'dark' : 'light'}-mode-btn`,\n          onClick: onAddMusic,\n          children: \"Add Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded ml-4\",\n          onClick: handleToggleDarkMode,\n          children: darkMode ? 'Light Mode' : 'Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"O1NYIONdluZd30ieg5BId/a8VUg=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Navbar","currentPlaylist","onAddMusic","_s","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","setItem","stringify","handleToggleDarkMode","prevDarkMode","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Navbar = ({ currentPlaylist, onAddMusic }) => {\n  const [darkMode, setDarkMode] = useState(() => {\n    // Get the initial dark mode state from local storage or default to false\n    const savedDarkMode = localStorage.getItem('darkMode');\n    return savedDarkMode ? JSON.parse(savedDarkMode) : false;\n  });\n\n  // Update local storage when dark mode state changes\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const handleToggleDarkMode = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n  };\n\n  return (\n    <nav className={`bg-${darkMode ? 'darkGray' : 'lightGray'} p-4`}>\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <a href=\"/\" className=\"text-teal text-xl font-bold\">Spotify Top Songs</a>\n        <div className=\"flex items-center\">\n          <span className={`text-${darkMode ? 'white' : 'black'} mr-4`}>Current Playlist: {currentPlaylist}</span>\n          <button \n            className={`bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded ${darkMode ? 'dark' : 'light'}-mode-btn`}\n            onClick={onAddMusic}\n          >\n            Add Music\n          </button>\n          <button \n            className=\"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded ml-4\"\n            onClick={handleToggleDarkMode}\n          >\n            {darkMode ? 'Light Mode' : 'Dark Mode'}\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMU,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,OAAOF,aAAa,GAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,GAAG,KAAK;EAC1D,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACR,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IACjCR,WAAW,CAACS,YAAY,IAAI,CAACA,YAAY,CAAC;EAC5C,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAG,MAAKX,QAAQ,GAAG,UAAU,GAAG,WAAY,MAAM;IAAAY,QAAA,eAC9DjB,OAAA;MAAKgB,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAClEjB,OAAA;QAAGkB,IAAI,EAAC,GAAG;QAACF,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzEtB,OAAA;QAAKgB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCjB,OAAA;UAAMgB,SAAS,EAAG,QAAOX,QAAQ,GAAG,OAAO,GAAG,OAAQ,OAAO;UAAAY,QAAA,GAAC,oBAAkB,EAACf,eAAe;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxGtB,OAAA;UACEgB,SAAS,EAAG,qEAAoEX,QAAQ,GAAG,MAAM,GAAG,OAAQ,WAAW;UACvHkB,OAAO,EAAEpB,UAAW;UAAAc,QAAA,EACrB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtB,OAAA;UACEgB,SAAS,EAAC,wEAAwE;UAClFO,OAAO,EAAET,oBAAqB;UAAAG,QAAA,EAE7BZ,QAAQ,GAAG,YAAY,GAAG;QAAW;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAtCKH,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}