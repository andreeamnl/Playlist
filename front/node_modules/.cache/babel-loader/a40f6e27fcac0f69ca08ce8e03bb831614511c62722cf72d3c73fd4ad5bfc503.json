{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/Playlistify/Playlistify/spotify-top-songs/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Playlist from './components/Playlist/Playlist';\nimport Footer from './components/Footer/Footer';\nimport Login from './pages/Login/Login';\nimport './App.css';\n\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [showAbout, setShowAbout] = useState(false);\n\n//   const toggleAbout = () => {\n//     setShowAbout(prevState => !prevState);\n//   };\n\n//   const checkLoginStatus = () => {\n//     const accessToken = localStorage.getItem('token');\n//     if (accessToken) {\n//       setIsLoggedIn(true);\n//       console.log(\"is ogged in\");\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkLoginStatus();\n//     const intervalId = setInterval(() => {\n//       checkLoginStatus();\n//     }, 5000); \n//     return () => clearInterval(intervalId);\n//   },[]);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//       <Navbar toggleAbout={toggleAbout} />\n//       {showAbout && <About />}\n//         <Routes>\n//           <Route path=\"/SpotifyAPITest\" element={isLoggedIn ?<Playlist /> : <Login />} />\n//           <Route path=\"/about\" element={<About />} />\n//         </Routes>\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAbout, setShowAbout] = useState(false);\n  const toggleAbout = () => {\n    setShowAbout(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleAbout: toggleAbout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), showAbout && /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WMmzLMn8AFlJr6LkoOuBuAunxfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Playlist","Footer","Login","jsxDEV","_jsxDEV","App","_s","showAbout","setShowAbout","toggleAbout","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","About","_c","$RefreshReg$"],"sources":["/Applications/GitHub/Playlistify/Playlistify/spotify-top-songs/src/App.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Playlist from './components/Playlist/Playlist';\nimport Footer from './components/Footer/Footer';\nimport Login from './pages/Login/Login'\nimport './App.css';\n\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [showAbout, setShowAbout] = useState(false);\n\n//   const toggleAbout = () => {\n//     setShowAbout(prevState => !prevState);\n//   };\n  \n//   const checkLoginStatus = () => {\n//     const accessToken = localStorage.getItem('token');\n//     if (accessToken) {\n//       setIsLoggedIn(true);\n//       console.log(\"is ogged in\");\n//     } else {\n//       setIsLoggedIn(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkLoginStatus();\n//     const intervalId = setInterval(() => {\n//       checkLoginStatus();\n//     }, 5000); \n//     return () => clearInterval(intervalId);\n//   },[]);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//       <Navbar toggleAbout={toggleAbout} />\n//       {showAbout && <About />}\n//         <Routes>\n//           <Route path=\"/SpotifyAPITest\" element={isLoggedIn ?<Playlist /> : <Login />} />\n//           <Route path=\"/about\" element={<About />} />\n//         </Routes>\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n\n// export default App;\n\n\nfunction App() {\n  const [showAbout, setShowAbout] = useState(false);\n\n  const toggleAbout = () => {\n    setShowAbout(prevState => !prevState);\n  };\n \n  return (\n    <div className=\"App\">\n      <Navbar toggleAbout={toggleAbout} />\n      {showAbout && <About />}\n      <Playlist />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,WAAW;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC;EACvC,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA,CAACL,MAAM;MAACU,WAAW,EAAEA;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnCT,SAAS,iBAAIH,OAAA,CAACa,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBZ,OAAA,CAACJ,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZZ,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACV,EAAA,CAfQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}