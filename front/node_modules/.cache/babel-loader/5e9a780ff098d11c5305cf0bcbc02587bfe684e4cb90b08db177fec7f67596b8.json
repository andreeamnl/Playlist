{"ast":null,"code":"var _jsxFileName = \"/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Shuffle/Shuffle.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shuffle = ({\n  onShuffle\n}) => {\n  const handleShuffle = () => {\n    const playlist = JSON.parse(localStorage.getItem('playlist')) || [];\n    const shuffledPlaylist = shuffleArray(playlist);\n    localStorage.setItem('playlist', JSON.stringify(shuffledPlaylist));\n\n    // Trigger the parent component's onShuffle function\n    if (onShuffle) {\n      onShuffle(shuffledPlaylist);\n    }\n  };\n\n  // Function to shuffle an array\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleShuffle,\n    className: \"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded shadow-md focus:outline-none focus:ring-2 focus:ring-teal\",\n    children: \"Shuffle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Shuffle;\nexport default Shuffle;\nvar _c;\n$RefreshReg$(_c, \"Shuffle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Shuffle","onShuffle","handleShuffle","playlist","JSON","parse","localStorage","getItem","shuffledPlaylist","shuffleArray","setItem","stringify","array","shuffledArray","i","length","j","Math","floor","random","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/GitHub/SpotifyAPITest/spotify-top-songs/src/components/Shuffle/Shuffle.js"],"sourcesContent":["import React from 'react';\n\nconst Shuffle = ({ onShuffle }) => {\n  const handleShuffle = () => {\n    const playlist = JSON.parse(localStorage.getItem('playlist')) || [];\n\n    const shuffledPlaylist = shuffleArray(playlist);\n    localStorage.setItem('playlist', JSON.stringify(shuffledPlaylist));\n\n    // Trigger the parent component's onShuffle function\n    if (onShuffle) {\n      onShuffle(shuffledPlaylist);\n    }\n  };\n\n  // Function to shuffle an array\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  return (\n    <button onClick={handleShuffle} className=\"bg-teal hover:bg-hoverGray text-white font-bold py-2 px-4 rounded shadow-md focus:outline-none focus:ring-2 focus:ring-teal\">\n      Shuffle\n    </button>\n  );\n};\n\nexport default Shuffle;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IAEnE,MAAMC,gBAAgB,GAAGC,YAAY,CAACN,QAAQ,CAAC;IAC/CG,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEN,IAAI,CAACO,SAAS,CAACH,gBAAgB,CAAC,CAAC;;IAElE;IACA,IAAIP,SAAS,EAAE;MACbA,SAAS,CAACO,gBAAgB,CAAC;IAC7B;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIG,KAAK,IAAK;IAC9B,MAAMC,aAAa,GAAG,CAAC,GAAGD,KAAK,CAAC;IAChC,KAAK,IAAIE,CAAC,GAAGD,aAAa,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACjD,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,aAAa,CAACC,CAAC,CAAC,EAAED,aAAa,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,aAAa,CAACG,CAAC,CAAC,EAAEH,aAAa,CAACC,CAAC,CAAC,CAAC;IAC7E;IACA,OAAOD,aAAa;EACtB,CAAC;EAED,oBACEd,OAAA;IAAQqB,OAAO,EAAElB,aAAc;IAACmB,SAAS,EAAC,6HAA6H;IAAAC,QAAA,EAAC;EAExK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GA5BI3B,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}